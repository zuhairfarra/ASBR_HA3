function F_X = Hand_in_Eye_Calibration(q1,q2,t1,t2)
%UNTITLED6 Summary of this function goes here
%   Detailed explanation goes here
for idx = 1:9

jdx = idx+1;

E1 = [quat2rotm(q1(idx,:)) t1(idx,:)';...
      0 0 0 1];

E2 = [quat2rotm(q1(jdx,:)) t1(jdx,:)';...
      0 0 0 1];

S1 = [quat2rotm(q2(idx,:)) t2(idx,:)';...
      0 0 0 1];

S2 = [quat2rotm(q2(jdx,:)) t2(jdx,:)';...
      0 0 0 1];

A = E1\E2;
B = S1*S2^(-1);

R_A = A(1:3,1:3); p_A = A(1:3,4);
R_B = B(1:3,1:3); p_B = B(1:3,4);

q_A = rotm2quat(R_A);
q_B = rotm2quat(R_B);
idx = 1;
s_A = q_A(idx,1);
s_B = q_B(idx,1);
v_A = q_A(idx,2:4)';
v_B = q_B(idx,2:4)';
Mq((idx-1)*4+1:idx*4,:) = [(s_A-s_B) -(v_A-v_B)';...
                           (v_A-v_B) (s_A-s_B)*eye(3,3)+ssm(v_A+v_B)];

% Mq = zeros(4*length(q1(:,1)),4);
% for idx = 1:length(q1(:,1))
%     s_A = q1(idx,1);
%     s_B = q2(idx,1);
%     v_A = q1(idx,2:4)';
%     v_B = q2(idx,2:4)';
%     Mq((idx-1)*4+1:idx*4,:) = [(s_A-s_B) -(v_A-v_B)';...
%                               (v_A-v_B) (s_A-s_B)*eye(3,3)+ssm(v_A+v_B)];
% end


end

end